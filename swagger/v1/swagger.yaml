---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/calendar":
    get:
      summary: Fetches attractions for each day
      tags:
      - Calendar
      parameters:
      - name: Authorization
        in: header
        description: Bearer <token>
        required: true
        schema:
          type: string
      security:
      - Bearer: {}
      responses:
        '401':
          description: Cant find user for given token
          content: {}
        '200':
          description: Returns attractions grupped by day
          content: {}
  "/api/v1/locations":
    post:
      summary: Creates new location for pair
      tags:
      - Location
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Bearer <token>
        required: true
        schema:
          type: string
      responses:
        '401':
          description: Cant find user for given token
          content: {}
        '200':
          description: Pair already finished race, location not created
          content: {}
        '201':
          description: Location created
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                lat:
                  type: string
                lng:
                  type: string
              required:
              - lat
              - lng
  "/api/v1/locations/latest":
    get:
      summary: Fetches last location for each pair
      tags:
      - Location
      parameters:
      - name: Authorization
        in: header
        description: Bearer <token>
        required: true
        schema:
          type: string
      security:
      - Bearer: {}
      responses:
        '401':
          description: Cant find user for given token
          content: {}
        '200':
          description: Returns locations sorted by ranking ASC
          content: {}
  "/api/v1/login":
    post:
      summary: Sends verification code
      tags:
      - Login
      parameters: []
      responses:
        '200':
          description: Verification code was sent
          content: {}
        '401':
          description: Wrong credentials, verification code wasn't sent
          content: {}
        '503':
          description: |-
            Error with connection to external api occured,
                           verification code wasn't sent
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                pair_nr:
                  type: integer
              required:
              - email
              - pair_nr
    patch:
      summary: Returns authentication token
      tags:
      - Login
      parameters: []
      responses:
        '200':
          description: Verification code and emails are correct, token is returned
          content: {}
        '401':
          description: |-
            Verification code and emails are incorrect,
                           error is returned
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                verification_code:
                  type: integer
              required:
              - email
              - pair_nr
  "/api/v1/profile":
    get:
      summary: Returns information about current user
      tags:
      - Profile
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Bearer <token>
        required: true
        schema:
          type: string
      responses:
        '401':
          description: Cant find user for given token
          content: {}
        '200':
          description: Returns serialized current_user
          content: {}
    put:
      summary: Updates current user attributes
      tags:
      - Profile
      security:
      - Bearer: {}
      parameters:
      - name: Authorization
        in: header
        description: Bearer <token>
        required: true
        schema:
          type: string
      responses:
        '401':
          description: Cant find user for given token
          content: {}
        '200':
          description: updates and returns current_user json
          content: {}
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
